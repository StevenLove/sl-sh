error[E0277]: the trait bound `String: bridge_types::BridgedType` is not satisfied
  --> trybuild/tests/ensure_sl_from_value_trait_implement_fail.rs:11:26
   |
11 |     let x: String = dest.sl_into(&mut vm).unwrap();
   |                          ^^^^^^^ the trait `bridge_types::BridgedType` is not implemented for `String`
   |
   = help: the following other types implement trait `bridge_types::BridgedType`:
             HashMap<T, U>
             slvm::value::Value
             Vec<T>
             Option<T>
             Result<T, U>
             &slvm::value::Value
             &mut slvm::value::Value
note: required by a bound in `sl_into`
  --> $WORKSPACE/bridge_adapters/src/lisp_adapters.rs
   |
   |     T: BridgedType,
   |        ^^^^^^^^^^^ required by this bound in `SlInto::sl_into`
...
   |     fn sl_into(self, vm: &mut SloshVm) -> VMResult<T>;
   |        ------- required by a bound in this associated function

error[E0277]: the trait bound `String: SlFrom<slvm::value::Value>` is not satisfied
  --> trybuild/tests/ensure_sl_from_value_trait_implement_fail.rs:11:26
   |
11 |     let x: String = dest.sl_into(&mut vm).unwrap();
   |                          ^^^^^^^ the trait `SlFrom<slvm::value::Value>` is not implemented for `String`
   |
   = help: the following other types implement trait `SlFrom<T>`:
             <slvm::value::Value as SlFrom<bool>>
             <slvm::value::Value as SlFrom<char>>
             <slvm::value::Value as SlFrom<i32>>
             <slvm::value::Value as SlFrom<u32>>
             <slvm::value::Value as SlFrom<f64>>
             <slvm::value::Value as SlFrom<bridge_types::SloshChar<'a>>>
             <slvm::value::Value as SlFrom<Cow<'a, str>>>
             <slvm::value::Value as SlFrom<slvm::value::Value>>
           and $N others
   = note: required for `slvm::value::Value` to implement `SlInto<String>`

error[E0277]: the trait bound `f64: bridge_types::BridgedType` is not satisfied
  --> trybuild/tests/ensure_sl_from_value_trait_implement_fail.rs:12:23
   |
12 |     let x: f64 = dest.sl_into(&mut vm).unwrap();
   |                       ^^^^^^^ the trait `bridge_types::BridgedType` is not implemented for `f64`
   |
   = help: the following other types implement trait `bridge_types::BridgedType`:
             HashMap<T, U>
             slvm::value::Value
             Vec<T>
             Option<T>
             Result<T, U>
             &slvm::value::Value
             &mut slvm::value::Value
note: required by a bound in `sl_into`
  --> $WORKSPACE/bridge_adapters/src/lisp_adapters.rs
   |
   |     T: BridgedType,
   |        ^^^^^^^^^^^ required by this bound in `SlInto::sl_into`
...
   |     fn sl_into(self, vm: &mut SloshVm) -> VMResult<T>;
   |        ------- required by a bound in this associated function

error[E0277]: the trait bound `f64: SlFrom<slvm::value::Value>` is not satisfied
  --> trybuild/tests/ensure_sl_from_value_trait_implement_fail.rs:12:23
   |
12 |     let x: f64 = dest.sl_into(&mut vm).unwrap();
   |                       ^^^^^^^ the trait `SlFrom<slvm::value::Value>` is not implemented for `f64`
   |
   = help: the following other types implement trait `SlFrom<T>`:
             <slvm::value::Value as SlFrom<bool>>
             <slvm::value::Value as SlFrom<char>>
             <slvm::value::Value as SlFrom<i32>>
             <slvm::value::Value as SlFrom<u32>>
             <slvm::value::Value as SlFrom<f64>>
             <slvm::value::Value as SlFrom<bridge_types::SloshChar<'a>>>
             <slvm::value::Value as SlFrom<Cow<'a, str>>>
             <slvm::value::Value as SlFrom<slvm::value::Value>>
           and $N others
   = note: required for `slvm::value::Value` to implement `SlInto<f64>`

error[E0277]: the trait bound `i64: bridge_types::BridgedType` is not satisfied
  --> trybuild/tests/ensure_sl_from_value_trait_implement_fail.rs:13:23
   |
13 |     let x: i64 = dest.sl_into(&mut vm).unwrap();
   |                       ^^^^^^^ the trait `bridge_types::BridgedType` is not implemented for `i64`
   |
   = help: the following other types implement trait `bridge_types::BridgedType`:
             HashMap<T, U>
             slvm::value::Value
             Vec<T>
             Option<T>
             Result<T, U>
             &slvm::value::Value
             &mut slvm::value::Value
note: required by a bound in `sl_into`
  --> $WORKSPACE/bridge_adapters/src/lisp_adapters.rs
   |
   |     T: BridgedType,
   |        ^^^^^^^^^^^ required by this bound in `SlInto::sl_into`
...
   |     fn sl_into(self, vm: &mut SloshVm) -> VMResult<T>;
   |        ------- required by a bound in this associated function

error[E0277]: the trait bound `i64: SlFrom<slvm::value::Value>` is not satisfied
  --> trybuild/tests/ensure_sl_from_value_trait_implement_fail.rs:13:23
   |
13 |     let x: i64 = dest.sl_into(&mut vm).unwrap();
   |                       ^^^^^^^ the trait `SlFrom<slvm::value::Value>` is not implemented for `i64`
   |
   = help: the following other types implement trait `SlFrom<T>`:
             <slvm::value::Value as SlFrom<bool>>
             <slvm::value::Value as SlFrom<char>>
             <slvm::value::Value as SlFrom<i32>>
             <slvm::value::Value as SlFrom<u32>>
             <slvm::value::Value as SlFrom<f64>>
             <slvm::value::Value as SlFrom<bridge_types::SloshChar<'a>>>
             <slvm::value::Value as SlFrom<Cow<'a, str>>>
             <slvm::value::Value as SlFrom<slvm::value::Value>>
           and $N others
   = note: required for `slvm::value::Value` to implement `SlInto<i64>`

error[E0277]: the trait bound `usize: bridge_types::BridgedType` is not satisfied
  --> trybuild/tests/ensure_sl_from_value_trait_implement_fail.rs:14:25
   |
14 |     let x: usize = dest.sl_into(&mut vm).unwrap();
   |                         ^^^^^^^ the trait `bridge_types::BridgedType` is not implemented for `usize`
   |
   = help: the following other types implement trait `bridge_types::BridgedType`:
             HashMap<T, U>
             slvm::value::Value
             Vec<T>
             Option<T>
             Result<T, U>
             &slvm::value::Value
             &mut slvm::value::Value
note: required by a bound in `sl_into`
  --> $WORKSPACE/bridge_adapters/src/lisp_adapters.rs
   |
   |     T: BridgedType,
   |        ^^^^^^^^^^^ required by this bound in `SlInto::sl_into`
...
   |     fn sl_into(self, vm: &mut SloshVm) -> VMResult<T>;
   |        ------- required by a bound in this associated function

error[E0277]: the trait bound `usize: SlFrom<slvm::value::Value>` is not satisfied
  --> trybuild/tests/ensure_sl_from_value_trait_implement_fail.rs:14:25
   |
14 |     let x: usize = dest.sl_into(&mut vm).unwrap();
   |                         ^^^^^^^ the trait `SlFrom<slvm::value::Value>` is not implemented for `usize`
   |
   = help: the following other types implement trait `SlFrom<T>`:
             <slvm::value::Value as SlFrom<bool>>
             <slvm::value::Value as SlFrom<char>>
             <slvm::value::Value as SlFrom<i32>>
             <slvm::value::Value as SlFrom<u32>>
             <slvm::value::Value as SlFrom<f64>>
             <slvm::value::Value as SlFrom<bridge_types::SloshChar<'a>>>
             <slvm::value::Value as SlFrom<Cow<'a, str>>>
             <slvm::value::Value as SlFrom<slvm::value::Value>>
           and $N others
   = note: required for `slvm::value::Value` to implement `SlInto<usize>`

error[E0277]: the trait bound `f32: bridge_types::BridgedType` is not satisfied
  --> trybuild/tests/ensure_sl_from_value_trait_implement_fail.rs:15:23
   |
15 |     let x: f32 = dest.sl_into(&mut vm).unwrap();
   |                       ^^^^^^^ the trait `bridge_types::BridgedType` is not implemented for `f32`
   |
   = help: the following other types implement trait `bridge_types::BridgedType`:
             HashMap<T, U>
             slvm::value::Value
             Vec<T>
             Option<T>
             Result<T, U>
             &slvm::value::Value
             &mut slvm::value::Value
note: required by a bound in `sl_into`
  --> $WORKSPACE/bridge_adapters/src/lisp_adapters.rs
   |
   |     T: BridgedType,
   |        ^^^^^^^^^^^ required by this bound in `SlInto::sl_into`
...
   |     fn sl_into(self, vm: &mut SloshVm) -> VMResult<T>;
   |        ------- required by a bound in this associated function

error[E0277]: the trait bound `f32: SlFrom<slvm::value::Value>` is not satisfied
  --> trybuild/tests/ensure_sl_from_value_trait_implement_fail.rs:15:23
   |
15 |     let x: f32 = dest.sl_into(&mut vm).unwrap();
   |                       ^^^^^^^ the trait `SlFrom<slvm::value::Value>` is not implemented for `f32`
   |
   = help: the following other types implement trait `SlFrom<T>`:
             <slvm::value::Value as SlFrom<bool>>
             <slvm::value::Value as SlFrom<char>>
             <slvm::value::Value as SlFrom<i32>>
             <slvm::value::Value as SlFrom<u32>>
             <slvm::value::Value as SlFrom<f64>>
             <slvm::value::Value as SlFrom<bridge_types::SloshChar<'a>>>
             <slvm::value::Value as SlFrom<Cow<'a, str>>>
             <slvm::value::Value as SlFrom<slvm::value::Value>>
           and $N others
   = note: required for `slvm::value::Value` to implement `SlInto<f32>`

error[E0277]: the trait bound `&str: bridge_types::BridgedType` is not satisfied
  --> trybuild/tests/ensure_sl_from_value_trait_implement_fail.rs:16:24
   |
16 |     let x: &str = dest.sl_into(&mut vm).unwrap();
   |                        ^^^^^^^ the trait `bridge_types::BridgedType` is not implemented for `&str`
   |
   = help: the following other types implement trait `bridge_types::BridgedType`:
             HashMap<T, U>
             slvm::value::Value
             Vec<T>
             Option<T>
             Result<T, U>
             &slvm::value::Value
             &mut slvm::value::Value
note: required by a bound in `sl_into`
  --> $WORKSPACE/bridge_adapters/src/lisp_adapters.rs
   |
   |     T: BridgedType,
   |        ^^^^^^^^^^^ required by this bound in `SlInto::sl_into`
...
   |     fn sl_into(self, vm: &mut SloshVm) -> VMResult<T>;
   |        ------- required by a bound in this associated function

error[E0277]: the trait bound `&str: SlFrom<slvm::value::Value>` is not satisfied
  --> trybuild/tests/ensure_sl_from_value_trait_implement_fail.rs:16:24
   |
16 |     let x: &str = dest.sl_into(&mut vm).unwrap();
   |                        ^^^^^^^ the trait `SlFrom<slvm::value::Value>` is not implemented for `&str`
   |
   = help: the following other types implement trait `SlFrom<T>`:
             <slvm::value::Value as SlFrom<bool>>
             <slvm::value::Value as SlFrom<char>>
             <slvm::value::Value as SlFrom<i32>>
             <slvm::value::Value as SlFrom<u32>>
             <slvm::value::Value as SlFrom<f64>>
             <slvm::value::Value as SlFrom<bridge_types::SloshChar<'a>>>
             <slvm::value::Value as SlFrom<Cow<'a, str>>>
             <slvm::value::Value as SlFrom<slvm::value::Value>>
           and $N others
   = note: required for `slvm::value::Value` to implement `SlInto<&str>`

error[E0277]: the trait bound `bool: bridge_types::BridgedType` is not satisfied
  --> trybuild/tests/ensure_sl_from_value_trait_implement_fail.rs:17:24
   |
17 |     let x: bool = dest.sl_into(&mut vm).unwrap();
   |                        ^^^^^^^ the trait `bridge_types::BridgedType` is not implemented for `bool`
   |
   = help: the following other types implement trait `bridge_types::BridgedType`:
             HashMap<T, U>
             slvm::value::Value
             Vec<T>
             Option<T>
             Result<T, U>
             &slvm::value::Value
             &mut slvm::value::Value
note: required by a bound in `sl_into`
  --> $WORKSPACE/bridge_adapters/src/lisp_adapters.rs
   |
   |     T: BridgedType,
   |        ^^^^^^^^^^^ required by this bound in `SlInto::sl_into`
...
   |     fn sl_into(self, vm: &mut SloshVm) -> VMResult<T>;
   |        ------- required by a bound in this associated function

error[E0277]: the trait bound `bool: SlFrom<slvm::value::Value>` is not satisfied
  --> trybuild/tests/ensure_sl_from_value_trait_implement_fail.rs:17:24
   |
17 |     let x: bool = dest.sl_into(&mut vm).unwrap();
   |                        ^^^^^^^ the trait `SlFrom<slvm::value::Value>` is not implemented for `bool`
   |
   = help: the following other types implement trait `SlFrom<T>`:
             <slvm::value::Value as SlFrom<bool>>
             <slvm::value::Value as SlFrom<char>>
             <slvm::value::Value as SlFrom<i32>>
             <slvm::value::Value as SlFrom<u32>>
             <slvm::value::Value as SlFrom<f64>>
             <slvm::value::Value as SlFrom<bridge_types::SloshChar<'a>>>
             <slvm::value::Value as SlFrom<Cow<'a, str>>>
             <slvm::value::Value as SlFrom<slvm::value::Value>>
           and $N others
   = note: required for `slvm::value::Value` to implement `SlInto<bool>`
