(defn lists= (list1 list2)
    (if (not (= (length list1)(length list2)))
        nil
        (if (= (length list1) 0)
            t
            (if (not (= (first list1)(first list2)))
                nil
                (recur (rest list1) (rest list2))))))
                

(let ((l1 '(1 2 3)) (l2 '(a b c)) (l3 '(1 2 (a b c) 3)) (l4))
    (if (and (= (first l1) 1) (lists= l1 '(1 2 3)))
        (println "PASS") (println "FAIL"))
    (if (and (lists= (rest l1) '(2 3)) (lists= l1 '(1 2 3)))
        (println "PASS") (println "FAIL"))
    (if (= (length l1) 3)
        (println "PASS") (println "FAIL"))
    (if (and (= (last l1) 3) (lists= l1 '(1 2 3)))
        (println "PASS") (printnl "FAIL"))
    (if (and (lists= (butlast l1) '(1 2)) (lists= l1 '(1 2 3)))
        (println "PASS") (println "FAIL"))
    (if (and (= (nth 1 l1) 2) (lists= l1 '(1 2 3)))
        (println "PASS") (println "FAIL"))
    (if (and (lists= (setfirst x l1) '(x 1 2 3)) (lists= l1 '(1 2 3)))
        (println "PASS") (println "FAIL"))
    (if (and (lists= (setrest '(x y z) l1) '(x 1 2 3)) (lists= l1 '(1 2 3)))
        (println "PASS") (println "FAIL"))
    (if (and (lists= (setlast l1 x) '(1 2 3 x)) (lists= l1 '(1 2 3)))
        (println "PASS") (println "FAIL"))
    (if (and (lists= (setbutlast '(x y z) l1) '(x y z 3)) (lists= l1 '(1 2 3)))
        (println "PASS") (println "FAIL"))
    (if (and (lists= (setnth 1 x l1) '(1 x 3)) (lists= l1 '(1 x 3)))
        (println "PASS") (println "FAIL"))
    (if (and (lists= (append l1 l2) '(1 x 3 a b c)) (lists= l1 '(1 x 3)) (lists= l2 '(a b c)))
        (println "PASS") (println "FAIL"))
    (if (and (lists= (push l1 4) '(1 x 3 4)) (lists= l1 '(1 x 3 4)))
        (println "PASS") (println "FAIL"))
    (setq l4 (nth 2 l3))
    (push l4 d)
    (if (and (lists= (nth 2 l3) '(a b c d)) (lists= l4 (nth 2 l3)))
        (println "PASS") (println "FAIL"))
    (if (and (= (pop l1) 4) (lists= l1 '(1 x 3)))
        (println "PASS") (println "FAIL"))
    (if (and (lists= (remove-nth 1 l1) '(1 3)) (lists= l1 '(1 3)))
        (println "PASS") (println "FAIL"))
    (if (not (is-empty l1))
        (println "PASS") (println "FAIL"))
    (if (and (lists= (clear l1) '()) (lists= l1 '()))
        (println "PASS") (println "FAIL"))
    (if (is-empty l1)
        (println "PASS") (println "FAIL"))
    (if (and (lists= (insert-nth 0 2 l1) '(2)) (lists= l1 '(2)))
        (println "PASS") (println "FAIL"))
    (if (and (lists= (insert-nth 0 1 l1) '(1 2)) (lists= l1 '(1 2)))
        (println "PASS") (println "FAIL"))
    (if (and (lists= (insert-nth 2 3 l1) '(1 2 3)) (lists= l1 '(1 2 3)))
        (println "PASS") (println "FAIL"))
    (if (and (lists= (insert-nth 1 a l1) '(1 a 2 3)) (lists= l1 '(1 a 2 3)))
        (println "PASS") (println "FAIL" l1))
    )

