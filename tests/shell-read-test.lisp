$(export XXX1 hello)
(test::assert-equal "hello" $XXX1)
$(export XXX2 test:$XXX1)
(test::assert-equal "test:hello" $XXX2)
$(export XXX2 $XXX1:test)
(test::assert-equal "hello:test" $XXX2)
$(export XXX3 $XXX1:test-$XXX2)
(test::assert-equal "hello:test-hello:test" $XXX3)
$(export XXX3 $XXX1:test-${XXX2}xxx)
(test::assert-equal "hello:test-hello:testxxx" $XXX3)
$(export XXX3 $XXX1:test-\${XXX2}xxx)
(test::assert-equal "hello:test-\${XXX2}xxx" $XXX3)
$(export XXX3 $XXX1:test-\$XXX2xxx)
(test::assert-equal "hello:test-\$XXX2xxx" $XXX3)
$(export XXX3 $XXX1)
(test::assert-equal "hello" $XXX3)

$(export YYY $(echo "1\n20\n10" | grep 1 | grep 0))
(test::assert-equal "10\n" $YYY)
(def yyy (str $(echo "1\n20\n10" | grep 1 | grep 0)))
(test::assert-equal "10\n" $yyy)

$(export ECHO $(which echo))
; sub 6 because there is a newline and a / to remove.
$(export BIN $((str-sub 0 (- (length $ECHO) 6) $ECHO)))

$(export YYY $($ECHO "1\n20\n10" | grep 1 | ${BIN}/grep 0))
(test::assert-equal "10\n" $YYY)

$(echo "one" > $(temp-dir)/shell-read-test1.txt)
(def topen (open (str (temp-dir) "/shell-read-test1.txt") :read))
(test::assert-equal "one" (str-trim (read-line topen)))
(close topen)

$(echo "one" > "$(temp-dir)/shell-read-test1.txt")
(def topen (open (str (temp-dir) "/shell-read-test1.txt") :read))
(test::assert-equal "one" (str-trim (read-line topen)))
(close topen)

(def xxx "shell-read-test2.txt")
$(echo "two" > $(temp-dir)/$xxx)
(def topen (open (str (temp-dir) "/shell-read-test2.txt") :read))
(test::assert-equal "two" (str-trim (read-line topen)))
(close topen)

(def xxx "shell-read-test2.txt")
$(echo "two" > "$(temp-dir)/$xxx")
(def topen (open (str (temp-dir) "/shell-read-test2.txt") :read))
(test::assert-equal "two" (str-trim (read-line topen)))
(close topen)

$(echo "three" > $(temp-dir)/shell\ read\ test3.txt)
(def topen (open (str (temp-dir) "/shell read test3.txt") :read))
(test::assert-equal "three" (str-trim (read-line topen)))
(close topen)

$(echo "three" > "$(temp-dir)/shell read test3.txt")
(def topen (open (str (temp-dir) "/shell read test3.txt") :read))
(test::assert-equal "three" (str-trim (read-line topen)))
(close topen)

(defn proc-exit0 () (fork 0))
(defn proc-exit1 () (fork 1))
(defn im-nil () nil)
(defn im-true () #t)

(test::assert-equal 0 (wait (proc-exit0)))
(test::assert-equal 1 (wait (proc-exit1)))

$(export sig1 "pre" && export sig2 "pre" && export sig3 "pre")
(test::assert-equal "pre" $sig1)
(test::assert-equal "pre" $sig2)
(test::assert-equal "pre" $sig3)
$(export sig1 "post" && proc-exit0 && export sig2 "post" && proc-exit0 && export sig3 "post")
(test::assert-equal "post" $sig1)
(test::assert-equal "post" $sig2)
(test::assert-equal "post" $sig3)

$(export sig1 "pre" && export sig2 "pre" && export sig3 "pre")
(test::assert-equal "pre" $sig1)
(test::assert-equal "pre" $sig2)
(test::assert-equal "pre" $sig3)
$(export sig1 "post" && proc-exit1 && export sig2 "post" && proc-exit0 && export sig3 "post")
(test::assert-equal "post" $sig1)
(test::assert-equal "pre" $sig2)
(test::assert-equal "pre" $sig3)

$(export sig1 "pre" && export sig2 "pre" && export sig3 "pre")
(test::assert-equal "pre" $sig1)
(test::assert-equal "pre" $sig2)
(test::assert-equal "pre" $sig3)
$(export sig1 "post" && proc-exit0 && export sig2 "post" && proc-exit1 && export sig3 "post")
(test::assert-equal "post" $sig1)
(test::assert-equal "post" $sig2)
(test::assert-equal "pre" $sig3)

$(export sig1 "pre" && export sig2 "pre" && export sig3 "pre")
(test::assert-equal "pre" $sig1)
(test::assert-equal "pre" $sig2)
(test::assert-equal "pre" $sig3)
$(export sig1 "post" @@ proc-exit0 @@ export sig2 "post" @@ proc-exit1 @@ export sig3 "post")
(test::assert-equal "post" $sig1)
(test::assert-equal "post" $sig2)
(test::assert-equal "post" $sig3)

$(export sig1 "pre" && export sig2 "pre" && export sig3 "pre")
(test::assert-equal "pre" $sig1)
(test::assert-equal "pre" $sig2)
(test::assert-equal "pre" $sig3)
$(export sig1 "post" @@ proc-exit0 || export sig2 "post" @@ proc-exit0 || export sig3 "post")
(test::assert-equal "post" $sig1)
(test::assert-equal "pre" $sig2)
(test::assert-equal "pre" $sig3)

$(export sig1 "pre" && export sig2 "pre" && export sig3 "pre")
(test::assert-equal "pre" $sig1)
(test::assert-equal "pre" $sig2)
(test::assert-equal "pre" $sig3)
$(export sig1 "post" @@ im-nil || export sig2 "post" @@ im-nil || export sig3 "post")
(test::assert-equal "post" $sig1)
(test::assert-equal "post" $sig2)
(test::assert-equal "post" $sig3)

$(export sig1 "pre" && export sig2 "pre" && export sig3 "pre")
(test::assert-equal "pre" $sig1)
(test::assert-equal "pre" $sig2)
(test::assert-equal "pre" $sig3)
$(export sig1 "post" @@ im-nil || export sig2 "post" @@ im-true || export sig3 "post")
(test::assert-equal "post" $sig1)
(test::assert-equal "post" $sig2)
(test::assert-equal "pre" $sig3)
