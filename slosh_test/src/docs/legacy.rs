use compile_state::state::SloshVm;
use slvm::{VMResult, Value};

pub fn get_legacy_sl_sh_forms(vm: &mut SloshVm, _registers: &[Value]) -> VMResult<Value> {
    let v = legacy_sl_sh_forms();
    let v = v
        .iter()
        .map(|x| vm.alloc_string_ro(x.to_string()))
        .collect();
    Ok(vm.alloc_vector(v))
}

fn legacy_sl_sh_forms() -> &'static [&'static str] {
    [
        "%",
        "*",
        "*active-ns*",
        "*bg-black*",
        "*bg-blue*",
        "*bg-cyan*",
        "*bg-default*",
        "*bg-green*",
        "*bg-magenta*",
        "*bg-red*",
        "*bg-white*",
        "*bg-yellow*",
        "*collection-src*",
        "*core-src*",
        "*euid*",
        "*euler*",
        "*fg-black*",
        "*fg-blue*",
        "*fg-cyan*",
        "*fg-default*",
        "*fg-green*",
        "*fg-magenta*",
        "*fg-red*",
        "*fg-white*",
        "*fg-yellow*",
        "*getopts-log*",
        "*getopts-src*",
        "*iterator-src*",
        "*last-command*",
        "*last-status*",
        "*lib-src*",
        "*load-path*",
        "*ns*",
        "*ns-exports*",
        "*pi*",
        "*read-table*",
        "*read-table-terminal*",
        "*repl-settings*",
        "*run-script*",
        "*seq-src*",
        "*shell-read-src*",
        "*shell-src*",
        "*slsh-std-src*",
        "*slshrc-src*",
        "*std-lib-exported-syms-hash*",
        "*std-lib-namespaces*",
        "*std-lib-syms-hash*",
        "*stderr*",
        "*stdin*",
        "*stdout*",
        "*string-read-table*",
        "*struct-src*",
        "*test-src*",
        "*uid*",
        "=+",
        "-",
        "->",
        "->>",
        "/",
        "2pow",
        "<",
        "<=",
        "=",
        ">",
        ">=",
        "^ns-stack-xyz^",
        "__prompt",
        "abs",
        "alias",
        "alias?",
        "and",
        "and-let*",
        "append",
        "append-iter",
        "append-to!",
        "apply",
        "apply-defaults",
        "arccos",
        "arcsin",
        "arctan",
        "args",
        "arity-zero-can-not-be-required",
        "assert-equal",
        "assert-error",
        "assert-error-msg",
        "assert-false",
        "assert-includes",
        "assert-not-equal",
        "assert-not-includes",
        "assert-true",
        "back-quote",
        "bg",
        "bg-color-rgb",
        "block",
        "boolean?",
        "builtin?",
        "butlast",
        "caaar",
        "caadr",
        "caar",
        "cadar",
        "cadddr",
        "caddr",
        "cadr",
        "callable?",
        "car",
        "cd",
        "cdaar",
        "cdadr",
        "cdar",
        "cddar",
        "cdddr",
        "cddr",
        "cdr",
        "ceil",
        "chain",
        "chain-and",
        "chain-when",
        "char->int",
        "char-lower",
        "char-upper",
        "char-whitespace?",
        "char?",
        "check",
        "check-custom",
        "clear-dirs",
        "close",
        "codepoints",
        "collate-fs-changes",
        "collect",
        "collect-copy",
        "collect-str",
        "collect-vec",
        "cond",
        "consume-comment",
        "consume-whitespace",
        "cos",
        "dec!",
        "def",
        "def?",
        "defmacro",
        "defn",
        "defstruct",
        "deftrait",
        "dirs",
        "do",
        "do-unstr",
        "doc",
        "doc-raw",
        "dotimes",
        "dotimes-i",
        "double-ended-iter?",
        "double-ended-iterator",
        "dyn",
        "empty-seq?",
        "empty?",
        "enforce-constrains",
        "epoch",
        "eprint",
        "eprintln",
        "err",
        "err>",
        "err>>",
        "err>null",
        "error-stack-off",
        "error-stack-on",
        "eval",
        "exit",
        "exp",
        "expand-brace",
        "expand-dollar",
        "expand-macro",
        "expand-macro-all",
        "expand-macro1",
        "expand-tilde",
        "export",
        "false?",
        "falsey?",
        "fc",
        "fg",
        "fg-color-rgb",
        "file-iter",
        "file?",
        "filter",
        "filter-iter",
        "find-symbol",
        "first",
        "first-quartile",
        "fix-one-arg-bindings",
        "flatten-args",
        "float->int",
        "float?",
        "floor",
        "flush",
        "fn",
        "fn-to-predicate",
        "fncall",
        "for",
        "for-i",
        "fork",
        "format",
        "fract",
        "fs-accessed",
        "fs-base",
        "fs-crawl",
        "fs-dir?",
        "fs-exists?",
        "fs-file?",
        "fs-len",
        "fs-modified",
        "fs-notify",
        "fs-parent",
        "fs-rm",
        "fs-same?",
        "func?",
        "gensym",
        "get-arity",
        "get-dirs",
        "get-env",
        "get-error",
        "get-home",
        "get-next-params",
        "get-pid",
        "get-rgb-seq",
        "get-temp",
        "get-temp-file",
        "get_pwd",
        "getopts",
        "getopts-bad-first-arg",
        "getopts-bad-option-arity",
        "getopts-help",
        "getopts-help--options-map-is-map",
        "getopts-illegal-option",
        "getopts-invalid-type-function",
        "getopts-options-map-is-map",
        "getopts-type-error-message",
        "glob",
        "handle-last-command",
        "handle-process",
        "hash-clear!",
        "hash-get",
        "hash-haskey",
        "hash-keys",
        "hash-remove!",
        "hash-set!",
        "hash?",
        "history-context",
        "history-empty?",
        "history-length",
        "history-nth",
        "history-push",
        "history-push-throwaway",
        "identity",
        "if",
        "import",
        "in?",
        "inc!",
        "int->float",
        "int?",
        "interleave",
        "interleave-iter",
        "intern-stats",
        "is-getopts-option-string",
        "is-multi-char-arg",
        "is-multi-single-char-args",
        "is-single-char-arg",
        "iter",
        "iter-or-single",
        "iter?",
        "iterator",
        "jobs",
        "join",
        "lambda?",
        "last",
        "len0?",
        "len>0?",
        "length",
        "let",
        "let*",
        "let-env",
        "list",
        "list-iter",
        "list-vec?",
        "list?",
        "lists=",
        "lne",
        "load",
        "log",
        "log2",
        "logger",
        "loop",
        "macro",
        "macro?",
        "make-hash",
        "make-hash-with-keys",
        "make-regex",
        "make-vec",
        "map",
        "map-iter",
        "match",
        "max",
        "maybe-docstring?",
        "maybe-glob?",
        "mean",
        "median",
        "meld",
        "meld-iter",
        "meta-add-tags",
        "meta-column-no",
        "meta-file-name",
        "meta-line-no",
        "meta-tag?",
        "method",
        "min",
        "mkli",
        "mode",
        "next!",
        "nil?",
        "non-empty-seq?",
        "none?",
        "not",
        "ns-auto-export",
        "ns-create",
        "ns-enter",
        "ns-exists?",
        "ns-export",
        "ns-import",
        "ns-list",
        "ns-pop",
        "ns-push",
        "ns-symbols",
        "nsubstitute!",
        "nth",
        "null",
        "nyi",
        "occurs",
        "open",
        "or",
        "out-err>",
        "out-err>>",
        "out-err>null",
        "out>",
        "out>>",
        "out>null",
        "pair=",
        "pair?",
        "path_list_trunc",
        "pid",
        "pipe",
        "pipe-err",
        "popd",
        "pow",
        "print",
        "print-error",
        "println",
        "probool",
        "process?",
        "prompt",
        "pushd",
        "qsort",
        "quote",
        "random",
        "random-str",
        "range",
        "range-iter",
        "re-color",
        "re-find",
        "re-find-all",
        "re-match",
        "re-replace",
        "read",
        "read-all",
        "read-line",
        "read-list",
        "read-string",
        "read-var",
        "read-var-bracket",
        "reader-macro-dot",
        "reap-jobs",
        "recur",
        "redir&>",
        "redir&>>",
        "redir2>",
        "redir2>>",
        "redir>",
        "redir>>",
        "reduce",
        "reduce-times",
        "ref",
        "regex?",
        "register-alias",
        "repeat",
        "repeat-iter",
        "repl",
        "repl-eof",
        "repl-line",
        "required-argument",
        "rest",
        "return-from",
        "reverse",
        "reverse-iter",
        "rm-esc",
        "round",
        "run-bg-first",
        "run-bg-prep-args",
        "run-example",
        "run-ns-example",
        "seq-for",
        "seq?",
        "set!",
        "set-dirs-max",
        "set_prompt_tail",
        "setnth!",
        "setup-chainer",
        "shell-read",
        "shell-read-int",
        "sin",
        "single-iter",
        "sleep",
        "slice",
        "slice-iter",
        "some?",
        "sqrt",
        "std-dev",
        "str",
        "str->float",
        "str->int",
        "str-append",
        "str-bytes",
        "str-cat-list",
        "str-clear!",
        "str-contains",
        "str-empty?",
        "str-iter-empty?",
        "str-iter-next!",
        "str-iter-peek",
        "str-iter-start",
        "str-lower",
        "str-ltrim",
        "str-map",
        "str-nth",
        "str-push!",
        "str-replace",
        "str-rsplit",
        "str-rsplitn",
        "str-rtrim",
        "str-split",
        "str-splitn",
        "str-starts-with",
        "str-sub",
        "str-trim",
        "str-upper",
        "string-iter",
        "string?",
        "substitute",
        "summary-stats",
        "supported-types-map",
        "sym",
        "sym->str",
        "symbol?",
        "syntax-off",
        "syntax-on",
        "sys-apply",
        "sys-command?",
        "syscall",
        "take",
        "take-iter",
        "tan",
        "temp-dir",
        "third-quartile",
        "time",
        "timer",
        "to-degrees",
        "to-radians",
        "tok-default-color",
        "tok-invalid-color",
        "tok-slsh-fcn-color",
        "tok-slsh-form-color",
        "tok-string-color",
        "tok-sys-alias-color",
        "tok-sys-command-color",
        "token-delim",
        "true?",
        "type",
        "umask",
        "unalias",
        "undef",
        "unexport",
        "unregister-alias",
        "unwind-protect",
        "valid-first-arg?",
        "values",
        "values-length",
        "values-nth",
        "values?",
        "var",
        "var-or-env",
        "vec",
        "vec-clear!",
        "vec-empty?",
        "vec-insert!",
        "vec-iter",
        "vec-nth",
        "vec-pop!",
        "vec-push!",
        "vec-remove!",
        "vec-set!",
        "vec-slice",
        "vec?",
        "verify-all-options-valid",
        "verify-arity",
        "version",
        "wait",
        "when",
        "with-padding",
        "with-temp",
        "with-temp-file",
        "write-line",
        "write-string",
        "xar!",
        "xdr!",
    ]
    .as_slice()
}
